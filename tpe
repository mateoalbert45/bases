3)a)  alter table alquiler add constraint fechaAlquiler
check(
fecha_desde <= fecha_hasta)


CAMBIAR NOMBRE DE LOS CHECKS
CAMBIAR NOMBRE DE LOS CHECKS
CAMBIAR NOMBRE DE LOS CHECKSCAMBIAR NOMBRE DE LOS CHECKS
CAMBIAR NOMBRE DE LOS CHECKS
CAMBIAR NOMBRE DE LOS CHECKS

CAMBIAR NOMBRE DE LOS CHECKS
CAMBIAR NOMBRE DE LOS CHECKS
CAMBIAR NOMBRE DE LOS CHECKS
CAMBIAR NOMBRE DE LOS CHECKS
CAMBIAR NOMBRE DE LOS CHECKS


3)b)  CREATE ASSERTION  pesoMaximo CHECK not exists(select 1
from pallet p join mov_entrada mv on(p.cod_pallet = mv.cod_pallet)
     join alquiler_posiciones ap on (mv.id_alquiler = ap.id_alquiler)
     join posicion pos on (ap.nro_posicion = pos.nro_posicion and ap.nro_estanteria = pos.nro_estanteria and ap.nro_fila = pos.nro_fila)
     join fila f on(pos.nro_estanteria = f.nro_estanteria and pos.nro_fila)
     group by p.cod_pallet
     having sum(p.peso) > f.peso_max_kg)
    
CREATE TRIGGER TR_1_fila_pesomaximo
before insert or update of nro_fila on fila
for each row
execute procedure TRFN_1_pesomaximo();
รง

CREATE FUNCTION TRFN_1_pesomaximo () RETURNS trigger as $body$
BEGIN
   
   IF (select 1
       from pallet p join mov_entrada mv on(p.cod_pallet = mv.cod_pallet)
        join alquiler_posiciones ap on (mv.id_alquiler = ap.id_alquiler)
        join posicion pos on (ap.nro_posicion = pos.nro_posicion and ap.nro_estanteria 
      = pos.nro_estanteria and ap.nro_fila = pos.nro_fila)
     join fila f on(pos.nro_estanteria = f.nro_estanteria and pos.nro_fila = f.nro_fila)
     Where f.nro_estanteria = new.nro_estanteria and f.nro_fila = new.nro_fila
     group by p.cod_pallet,f.peso_max_kg
     having sum(p.peso) > f.peso_max_kg) THEN
     RAISE EXCEPTION 'error de peso';
  END IF;
return new;
END;
$body$ LANGUAGE 'plpgsql';

3)c)
CREATE DOMAIN CK_1_posicion_TipoValido
AS varchar (40) NOT NULL
CHECK (tipo IN ('general','vidrio','insecticidas','inflamable'));
si lo pones directo en la consola de sql no anda, pero si lo pones seleccioanando la parte que dice  "restricciones" en la tabla si anda


PREGUNTAR ESTO ROMPE TODO

update mov_entrada
set cod_pallet = 5
where nro_fila = 1 and nro_posicion = 2

EJERCICIO C)A)
CREATE VIEW GR01_fecha_de_posicion_libre
AS SELECT ap.nro_posicion,ap.nro_estanteria,ap.nro_fila, a.fecha
      FROM alquiler_posiciones ap join alquiler a on (ap.id_alquiler = a.id_alquiler);
      where fecha_desde >='input' and fecha_hasta is null and estado is false


EJERCICIO C)B)
CREATE VIEW GR01_vencimiento_alquiler
AS SELECT c.cuit_cuil,c.apellido,c.nombre,a.fecha_hasta
      FROM cliente c join alquiler a on (c.cuit_cuil = a.id_cliente);
   """"""(where extract (day from fecha_hasta) - select (extract (day fecha_actual)) <=  cantidad_elegida_usuario+)"""""""
   PREGUNTAR SI PODEMOS USAR EL DATE DIFF PARA HACER LA DIFERENCIA DE DIAS ENTRE DOS FECHAS POR EJEMPLO:
   DATE_PART('day', FECHA_HASTA - FECHA_ACTUAL) <= 5 (ESTE 5 ES LA CANTIDAD DE DIAS QUE TIENE QUE AVISARTE ANTES DE QUE CADUQUE EL ALQUILER
      
estos 2 de arriba estan mal, porque no se tienen que usar vistas ya que no son reusables. tenemos q usar procedimientos, y el 5 que pusimos tie
que ser configurable, o sea, se le tiene q poder poner cualquier valor

AGREGAR EL POS GLOBAL EN POSICION (CREO) CON UNIQUE

D)1)
CREATE VIEW GR01_estado_posicion
select ap.nro_posicion , ap.nro_estanteria , ap.nro_fila, ap.estado, 
CASE 
WHEN ap.estado = true THEN DATE_PART('day', fecha_hasta) - DATE_PART('day', fecha_desde)
END as "dias restantes"

from alquiler_posiciones ap 
join alquiler a 
on (ap.id_alquiler = a.id_alquiler)
corregila matito :)

